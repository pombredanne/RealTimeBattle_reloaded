# ---------------------------------------------------------------------------
# Process this file with autoconf to produce a configure script.
# ---------------------------------------------------------------------------
AC_INIT(src/Core/RealTimeBattle.cc)

# ---------------------------------------------------------------------------
# Check for host type
# ---------------------------------------------------------------------------
AC_CANONICAL_SYSTEM

AC_ARG_PROGRAM

# ---------------------------------------------------------------------------
# Use header file 'config.h'
# ---------------------------------------------------------------------------
AM_CONFIG_HEADER(config.h)


# ---------------------------------------------------------------------------
# Version numbers
# ---------------------------------------------------------------------------
RTB_MAJOR_VERSION=1
RTB_MINOR_VERSION=1
RTB_MICRO_VERSION=0
RTB_EXTRA_VERSION=
RTB_RPM_RELEASE=1

RTB_LAST_RELEASED_VERSION=1.1.0
RTB_LAST_RELEASED_RELEASE=1

RTB_VERSION=$RTB_MAJOR_VERSION.$RTB_MINOR_VERSION.$RTB_MICRO_VERSION$RTB_EXTRA_VERSION

RTB_RPM_VERSION="$RTB_VERSION"-"$RTB_RPM_RELEASE"

AC_SUBST(RTB_MAJOR_VERSION)
AC_SUBST(RTB_MINOR_VERSION)
AC_SUBST(RTB_MICRO_VERSION)
AC_SUBST(RTB_RPM_RELEASE)
AC_SUBST(RTB_RPM_VERSION)
AC_SUBST(RTB_VERSION)

VERSION=$RTB_VERSION
PACKAGE=RealTimeBattle

AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

# ---------------------------------------------------------------------------
# libtool versioning
# ---------------------------------------------------------------------------
LT_CURRENT=`expr 0`
LT_REVISION=0
LT_AGE=0
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

# ---------------------------------------------------------------------------
# Define available translations
# ---------------------------------------------------------------------------

ALL_LINGUAS="de es fr gl ja pl pt sv"

# ---------------------------------------------------------------------------
# Directories
# ---------------------------------------------------------------------------

AC_SUBST(RTB_DIR)
AC_SUBST(RTB_LOCALEDIR)

DOCS_DIR=['${RTB_DIR}']
AC_SUBST(DOCS_DIR)
AC_SUBST(INSTALL_INFO)


# ---------------------------------------------------------------------------
# Start up automake
# ---------------------------------------------------------------------------

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

# ---------------------------------------------------------------------------
# Checks for programs.
# ---------------------------------------------------------------------------
AC_PROG_CXX
AC_PROG_CC
AC_ISC_POSIX
AC_PROG_INSTALL

AC_PREFIX_DEFAULT(/usr/local)


# ---------------------------------------------------------------------------
# Checks for header files.
# ---------------------------------------------------------------------------
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h strings.h sys/time.h unistd.h floatingpoint.h sys/types.h) 
AC_EGREP_HEADER(RLIMIT_NPROC, sys/resource.h, AC_DEFINE(HAVE_RLIMIT_NPROC))

# ---------------------------------------------------------------------------
# Search for install_info
# ---------------------------------------------------------------------------

AC_PATH_PROG(install_info, install-info, no, $PATH:/sbin:/usr/sbin/:/usr/local/sbin)
INSTALL_INFO=$install_info

# ---------------------------------------------------------------------------
# Search for sgml-tools
# ---------------------------------------------------------------------------

AC_CHECK_PROG(sgml2html, sgml2html, yes, no)
AM_CONDITIONAL(SGML2HTML, test x$sgml2html = xyes)

AC_CHECK_PROG(sgml2latex, sgml2latex, yes, no)
AM_CONDITIONAL(SGML2LATEX, test x$sgml2latex = xyes)

AC_CHECK_PROG(sgml2info, sgml2info, yes, no)
AM_CONDITIONAL(SGML2INFO, test x$sgml2info = xyes)

AC_CHECK_PROG(sgml2txt, sgml2txt, yes, no)
AM_CONDITIONAL(SGML2TXT, test x$sgml2txt = xyes)

AC_CHECK_PROG(sgml2lyx, sgml2lyx, yes, no)
AM_CONDITIONAL(SGML2LYX, test x$sgml2lyx = xyes)

AC_CHECK_PROG(sgml2rtf, sgml2rtf, yes, no)
AM_CONDITIONAL(SGML2RTF, test x$sgml2rtf = xyes)

# ---------------------------------------------------------------------------
# Library options (e.g. libtool stuff)
# ---------------------------------------------------------------------------

AC_ARG_ENABLE(dummy, [
Library options: ])

AC_LIBTOOL_DLOPEN
AC_DISABLE_STATIC
AM_PROG_LIBTOOL

# ---------------------------------------------------------------------------
# Debugging options
# ---------------------------------------------------------------------------

AC_ARG_ENABLE(debug, [  
RealTimeBattle options:
  --enable-debug[=no/minimum/yes]
                          turn on debugging [default=minimum]],,
    enable_debug=minimum)

AM_MAINTAINER_MODE

AC_ARG_ENABLE(compile-warnings,
              [  --enable-compile-warnings  turn on compile time warnings],
              , enable_compile_warnings=no)

WARNING_FLAGS="-Wall"
if test "x$enable_compile_warnings" = "xyes"; then
   CXXFLAGS="$CXXFLAGS $WARNING_FLAGS"
fi

changequote(,)dnl
if test "x$enable_debug" = "xyes"; then
   case " $CXXFLAGS " in
   *[\ \	]-g[\ \	]*) ;;
   *) CXXFLAGS="$CXXFLAGS -g " ;;
   esac
   case " $CFLAGS " in
   *[\ \	]-g[\ \	]*) ;;
   *) CFLAGS="$CFLAGS -g " ;;
   esac
   CXXFLAGS=`echo "$CXXFLAGS " | sed "s/-O[0-9]* //"`
   CFLAGS=`echo "$CXXFLAGS " | sed "s/-O[0-9]* //"`
else
   CXXFLAGS=`echo "$CXXFLAGS " | sed "s/-g //"`
   CFLAGS=`echo "$CFLAGS " | sed "s/-g //"`
   if test "x$enable_debug" = "xno"; then
      CPPFLAGS="$CPPFLAGS -DNDEBUG"
   fi
fi
changequote([,])dnl

# ---------------------------------------------------------------------------
# Enable threads? TODO: Threads is required!
# ---------------------------------------------------------------------------

AC_ARG_ENABLE(threads, [  --enable-threads        turn on basic thread support [default=yes]
                          ([=no] will override --with-threads)],,enable_threads=yes)

# ---------------------------------------------------------------------------
# Thread-checks (from glib: configure.in) with some minor changes
# ---------------------------------------------------------------------------
dnl ***********************
dnl *** thread checks ***
dnl ***********************

AC_ARG_WITH(threads, [  --with-threads=[none/posix/solaris/nspr] specify a thread implementation to use],
	if test "x$with_threads" = x; then
		want_threads=yes
	else
		want_threads=$with_threads
	fi,
	want_threads=yes)
if test "x$enable_threads" = "xno"; then
        want_threads=no
fi
if test "x$want_threads" = "xnone"; then
	want_threads=no
fi

dnl error and warning message
dnl *************************

THREAD_NO_IMPLEMENTATION="You do not have any known thread system on your
                computer."

FLAG_DOES_NOT_WORK="I can't find the MACRO, that enables thread safety on your
                platform (normaly it's "_REENTRANT"). I'll not use any flag on
                compilation now, but then your programs might not work.
                Please provide information on how it is done on your system."

LIBS_NOT_FOUND_1="I can't find the libraries for the thread implementation
		"

LIBS_NOT_FOUND_2=". Please choose another thread implementation or
		provide information on your thread implementation.
		You can also run 'configure --disable-threads' 
		to compile without thread support."

FUNC_NO_GETPWUID_R="some functions will not be MT-safe during their
		first call because there is no working 'getpwuid_r' on your system."

FUNC_NO_LOCALTIME_R="some functions will not be MT-safe
		because there is no 'localtime_r' on your system."

dnl determination of thread implementation
dnl ***************************************

have_threads=none
if test "x$want_threads" = xyes || test "x$want_threads" = xsolaris; then
	case $host in
			*-*-solaris*)
		AC_CHECK_LIB(thread, cond_init, have_threads=solaris)
		;;
	esac
fi
if test "x$want_threads" = xyes || test "x$want_threads" = xposix; then
        if test "x$have_threads" = xnone; then
                AC_CHECK_HEADER(pthread.h, have_threads=posix)
        fi
fi
if test "x$want_threads" = xyes || test "x$want_threads" = xnspr; then
        if test "x$have_threads" = xnone; then
		AC_CHECK_LIB(nspr21, PRP_NewNakedCondVar, have_threads=nspr)
	fi
fi

AC_MSG_CHECKING(for thread implementation)

if test "x$have_threads" = xnone && test "x$want_threads" != xno; then
	AC_MSG_RESULT(none available)
        AC_MSG_WARN($THREAD_NO_IMPLEMENTATION)
else
	AC_MSG_RESULT($have_threads)
fi


dnl determination of THREAD_LIBS
dnl ******************************

THREAD_LIBS=
THREAD_CFLAGS=

mutex_has_default=no
case $have_threads in
        posix)
		THREAD_LIBS=error
		AC_CHECK_LIB(pthread, pthread_attr_init,
			     THREAD_LIBS="-lpthread")
		if test "x$THREAD_LIBS" = xerror; then
						AC_CHECK_LIB(pthreads, pthread_attr_init,
			     	THREAD_LIBS="-lpthreads")
		fi
		if test "x$THREAD_LIBS" = xerror; then
						AC_CHECK_LIB(c_r, pthread_attr_init,
			     	THREAD_LIBS="-lc_r")
		fi
		if test "x$THREAD_LIBS" = xerror; then
			AC_CHECK_FUNC(pthread_attr_init, THREAD_LIBS="")
		fi
		dnl ********** DG/UX ************
			if test "x$THREAD_LIBS" = xerror; then
					AC_CHECK_LIB(thread, __d10_pthread_attr_init,
				THREAD_LIBS="-lthread"
				THREAD_CFLAGS="-D_POSIX4A_DRAFT10_SOURCE")
			fi
		dnl ********* HPUX 11 ***********
			if test "x$THREAD_LIBS" = xerror; then
				AC_CHECK_LIB(pthread, __pthread_attr_init_system,
				THREAD_LIBS="-lpthread")
			fi
                mutex_has_default=yes
                mutex_default_type='pthread_mutex_t'
                mutex_default_init='PTHREAD_MUTEX_INITIALIZER'
                mutex_header_file='pthread.h'
		threads_impl="POSIX"
                ;;
        solaris)
		THREAD_LIBS=error
                AC_CHECK_LIB(thread, cond_init, THREAD_LIBS="-lthread")
                mutex_has_default=yes
                mutex_default_type='mutex_t'
		mutex_default_init="DEFAULTMUTEX"
                mutex_header_file='thread.h'
		threads_impl="SOLARIS"
                ;;
	nspr)
		AC_CHECK_LIB(nspr21, PRP_NewNakedCondVar,
			     THREAD_LIBS="-lnspr21")
		threads_impl="NSPR"
		;;
        none)
		threads_impl="NONE"
                ;;
        *)
		threads2_impl="NONE"
		THREAD_LIBS=error
                ;;
esac

if test "x$THREAD_LIBS" = xerror; then
        AC_MSG_ERROR($LIBS_NOT_FOUND_1$have_threads$LIBS_NOT_FOUND_2)
fi

AC_MSG_CHECKING(necessary linker options)
AC_MSG_RESULT($THREAD_LIBS)

dnl determination of THREAD_FLAGS
dnl ********************************

if test x"$have_threads" != xnone; then
THREAD_FLAGS="$THREAD_FLAGS -D_REENTRANT" # good default guess

    case $host in
	*-aix*)
		THREAD_FLAGS="$THREAD_FLAGS -D_THREAD_SAFE"
		if test x"$GCC" = xyes; then
	        THREAD_FLAGS="$THREAD_FLAGS -mthreads"
		fi
		;;
	*-freebsd2.2*)
		THREAD_FLAGS="$THREAD_FLAGS -D_THREAD_SAFE"

      # FreeBSD 2.2.x shiped with gcc 2.7.2.x, which doesn't support
      # -mthreads flag.
		;;
    esac

    # if we are not finding the ctime_r function, then we probably are
    # not using the proper multithread flag
    # Note: Digital UNIX 4.0d #defines ctime_r to _Pctime_r for gcc.
    old_CPPFLAGS=$CPPFLAGS
    CPPFLAGS="$CPPFLAGS $THREAD_FLAGS"
    AC_EGREP_HEADER([[^a-zA-Z_](_P)?ctime_r[^a-zA-Z_]], time.h, ,
    THREAD_FLAGS=
    AC_MSG_WARN($FLAG_DOES_NOT_WORK))
    CPPFLAGS=$old_CPPFLAGS

    AC_MSG_CHECKING(necessary compiler options)

    AC_MSG_RESULT($THREAD_FLAGS)
else
    THREAD_FLAGS=
fi

# I don't know if these are necessary but they break the configure script
# so removed until needed

# dnl check for mt safe function variants
# dnl ***********************************

# if test x"$have_threads" != xnone; then
# 	thread_save_LIBS="$LIBS"
# 	thread_save_CFLAGS="$CFLAGS"
#    # we are not doing the following for now, as this might require  
#    # to always be linked with the thread libs on some platforms. 
#    # LIBS="$LIBS $THREAD_LIBS"
# 	CFLAGS="$CFLAGS $THREAD_FLAGS"
# 	AC_CHECK_FUNCS(localtime_r rand_r)
# 	if test "$ac_cv_header_pwd_h" = "yes"; then
# 		AC_MSG_CHECKING([for getpwuid_r])
# 	 	AC_CACHE_VAL(ac_cv_func_getpwuid_r,
# 			[AC_TRY_RUN([#include <errno.h>
# 				int main () { char buffer[10000], *pointer; 
# 				char getpwuid_r (long, void*, void*,
# 					int, void*);
# 				int error;
# 				errno = 0;
# 				error = getpwuid_r (0, &buffer, &buffer, 
# 					sizeof (buffer), &pointer);
# 				return errno == ENOSYS || error == ENOSYS;}],
# 				[ac_cv_func_getpwuid_r=yes],
# 				[ac_cv_func_getpwuid_r=no])])
# 		if test "$ac_cv_func_getpwuid_r" = yes; then
# 			AC_MSG_RESULT(yes)
# 			AC_DEFINE(HAVE_GETPWUID_R)
# 		else
# 			AC_MSG_RESULT(no)
# 		fi
# 		if test "$ac_cv_func_getpwuid_r" = "yes"; then
# 			AC_MSG_CHECKING(whether getpwuid_r is posix like)
#          # getpwuid_r(0, NULL, NULL, 0) is the signature on
#          # solaris, if that is not found, the prog below won't 
#          # compile, then the posix signature is assumed as 
#          # the default.
# 			AC_TRY_COMPILE([#include <pwd.h>],
# 				[getpwuid_r(0, NULL, NULL, 0);],
# 				[AC_MSG_RESULT(no)],
# 				[AC_MSG_RESULT(yes)
# 				AC_DEFINE(HAVE_GETPWUID_R_POSIX)])
# 		fi
# 	fi
# 	if test x"$have_threads" = xposix; then
# 		LIBS="$LIBS $THREAD_LIBS"
# 		AC_MSG_CHECKING(whether pthread_getspecific is posix like)
#       # PCThreads has pthread_getspecific(pthread_key_t, void **);
# 		AC_TRY_COMPILE([#include <pthread.h>],
# 			[pthread_getspecific(0,NULL);],
# 			[AC_MSG_RESULT(no)],
# 			[AC_MSG_RESULT(yes)
# 			AC_DEFINE(HAVE_PTHREAD_GETSPECIFIC_POSIX)])
# 		AC_MSG_CHECKING(whether pthread_mutex_trylock is posix like)
#       # DCE Threads return 1 as success, posix 0. what a mess.
# 		AC_TRY_RUN([#include <pthread.h>
# 			int main () { 
# 			pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
# 			return !pthread_mutex_trylock (&mutex); }],
# 			[AC_MSG_RESULT(no)],
# 			[AC_MSG_RESULT(yes)
# 			AC_DEFINE(HAVE_PTHREAD_MUTEX_TRYLOCK_POSIX)])
# 		AC_MSG_CHECKING(whether pthread_cond_timedwait is posix like)
#       # DCE Threads return -1 as failure, posix ETIMEDOUT.
# 		AC_TRY_RUN([#include <pthread.h>
# 			int main () { 
# 			pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
# 			pthread_cond_t cond = PTHREAD_COND_INITIALIZER;
# 			struct timeval tval;
# 			struct timespec tspec;
# 			gettimeofday (&tval, NULL);
# 			tspec.tv_sec = tval.tv_sec;
# 			tspec.tv_nsec = 0;
# 			return pthread_cond_timedwait (&cond,&mutex,&tspec) 
# 				!= -1;}],
# 			[AC_MSG_RESULT(no)],
# 			[AC_MSG_RESULT(yes)
# 			AC_DEFINE(HAVE_PTHREAD_COND_TIMEDWAIT_POSIX)])
# 	fi
# 	LIBS="$thread_save_LIBS"
# 	CFLAGS="$thread_save_CFLAGS"
# fi

# if test "x$enable_threads" = "xyes"; then
# 	if test "$ac_cv_func_getpwuid_r" != "yes"; then
# 		AC_MSG_WARN($FUNC_NO_GETPWUID_R)
# 	fi
# 	if test "$ac_cv_func_localtime_r" != "yes"; then
# 		AC_MSG_WARN($FUNC_NO_LOCALTIME_R)
# 	fi
# fi

#AC_DEFINE_UNQUOTED(THREAD_SOURCE,"gthread-$have_threads.c")

AC_SUBST(THREAD_FLAGS)
AC_SUBST(THREAD_LIBS)

# ---------------------------------------------------------------------------
# Check C++ specific things
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Switch to C++ mode
# ---------------------------------------------------------------------------
AC_LANG_SAVE
AC_LANG_CPLUSPLUS

# ---------------------------------------------------------------------------
# Check for stdc++ library and headers
# ---------------------------------------------------------------------------
AC_CHECK_LIB(stdc++, getc,stdcxx=yes,
	AC_MSG_ERROR(You need to have libstdc++ installed))
AC_CHECK_HEADER(vector.h,,
	AC_MSG_ERROR(You need to have the libstdc++ headers installed))

if test "x$stdcxx" = "xyes"; then
	STDCXX_LIBS=-lstdc++
fi
AC_SUBST(STDCXX_LIBS)

AC_LANG_RESTORE # End of c++ checks

# ---------------------------------------------------------------------------
#  RPM - set the correct CXXFLAGS and CFLAGS. Do not install the docs.
# ---------------------------------------------------------------------------

AC_ARG_ENABLE(rpm, [  --enable-rpm=[opts]     used when making RPM-packages], use_rpm=yes, use_rpm=no)

changequote(,)dnl
if test "x$use_rpm" = "xyes"; then
   CXXFLAGS="$enable_rpm" 	
   CFLAGS="$enable_rpm" 	
#	DOCS_DIR='${prefix}/doc/RealTimeBattle-${VERSION}'
	INSTALL_INFO=no
fi
changequote([,])dnl
AM_CONDITIONAL(ENABLE_RPM, test x$use_rpm = xyes)

# ---------------------------------------------------------------------------
# Set the specified RTB-dir
# ---------------------------------------------------------------------------

AC_ARG_WITH(rtb_dir, 
[  --with-rtb-dir=[path]   directory for rtb installation 
                          [EPREFIX/games/RealTimeBattle]],,
   with_rtb_dir=['${exec_prefix}/games/RealTimeBattle'])

RTB_DIR=$with_rtb_dir
RTB_EXPAND_DIR(ROBOTDIR, "${RTB_DIR}/Robots")
RTB_EXPAND_DIR(ARENADIR, "${RTB_DIR}/Arenas")
AC_DEFINE_UNQUOTED(ROBOTDIR, "$ROBOTDIR")
AC_DEFINE_UNQUOTED(ARENADIR, "$ARENADIR")

# ---------------------------------------------------------------------------
# Internationalization
# ---------------------------------------------------------------------------
AC_ARG_WITH(nls_localedir, 
[  --with-nls-localedir=[path]  Data directory for NLS, parent of locale 
                          [DATADIR/locale]],,
   with_nls_localedir=['${datadir}/locale'])

RTB_EXPAND_DIR(RTB_LOCALEDIR, "${with_nls_localedir}")
RTB_EXPAND_DIR(RTB_LOCALEDIR, "${RTB_LOCALEDIR}") #Need to expand twice!
AC_DEFINE_UNQUOTED(RTB_LOCALEDIR, "$RTB_LOCALEDIR")

AM_GNU_GETTEXT

# ---------------------------------------------------------------------------
# Choose a graphical user interface
# ---------------------------------------------------------------------------
AC_ARG_ENABLE(gui,
[  --enable-gui=[guess/types]  compile these graphical user interfaces
                           [default=guess]],
	[enable_gui=${enableval}], [enable_gui=guess])

# ---------------------------------------------------------------------------
# Check for library containing dlopen()
# ---------------------------------------------------------------------------
AC_CHECK_LIB(c_r, dlopen, [], [
  AC_CHECK_LIB(c, dlopen, [], [
    AC_CHECK_LIB(dl, dlopen, [], [
      echo "I can't find the library containing dlopen()"
      exit 1
    ])
  ])
])

# ---------------------------------------------------------------------------
# Check for dlopen_policy
# ---------------------------------------------------------------------------
AC_MSG_CHECKING([for dlopen modes])
AC_TRY_COMPILE([
#include <stdio.h>
#include <dlfcn.h>
],[
dlopen(NULL, RTLD_LAZY)
],[
  AC_MSG_RESULT([RTLD_LAZY])
  AC_DEFINE_UNQUOTED(DLOPEN_POLICY, RTLD_LAZY)
],[
  AC_TRY_COMPILE([
  #include <stdio.h>
  #include <dlcfn.h>
  ],[
  dlopen(NULL, DL_LAZY)
  ],[
    AC_MSG_RESULT([DL_LAZY])
    AC_DEFINE_UNQUOTED(DLOPEN_POLICY, DL_LAZY)
  ],[
    AC_MSG_RESULT([cannot determine, bailing])
    exit 1;
  ])
])

# ---------------------------------------------------------------------------
# Check for and choose graphical user interfaces
# ---------------------------------------------------------------------------

all_known_guis="Gtk none"

for gui_alias in ${all_known_guis} ;
do
	if test "x$enable_gui" = "xguess" ; then
		use_this_gui=yes
	else
		case "${enable_gui}" in
			${gui_alias} | "${gui_alias},"* | *",${gui_alias},"* | *",${gui_alias}" )
			use_this_gui=yes ;;
			* )
			use_this_gui=no ;;
		esac
	fi

# ---------------------------------------------------------------------------
# Gtk?
# ---------------------------------------------------------------------------
	if test "x$gui_alias" = "xGtk" ; then
		if test "x$use_this_gui" = xyes ; then
			AC_ARG_ENABLE(dummy, [
GTK options: ])
			AM_PATH_GTK(1.2.0, gtk_found="yes", gtk_found="no")
			if test "x$gtk_found" = "xyes"; then
				use_this_gui=yes
			else
				use_this_gui=no
				case "${enable_gui}" in
					${gui_alias} | "${gui_alias},"* | *",${gui_alias},"* | *",${gui_alias}" )
					AC_MSG_WARN([
*** GTK+ >= 0.99.7 is not correctly installed.
*** If you want the gtk gui. Please install Gtk+ >= 0.99.7
*** The latest version of GTK can be found at http://www.gtk.org])
					;;
					* )
					;;
				esac
			fi
		fi
		use_gtk=${use_this_gui}
	fi

# ---------------------------------------------------------------------------
# none?
# ---------------------------------------------------------------------------
	if test "x$gui_alias" = "xnone" ; then
		use_none=${use_this_gui}
	fi

	AC_MSG_CHECKING([whether gui ${gui_alias} should be compiled])
	AC_MSG_RESULT(${use_this_gui})

done

AM_CONDITIONAL(GUI_GTK, test "x$use_gtk" = xyes)
AM_CONDITIONAL(GUI_NONE, test "x$use_none" = xyes)

# ---------------------------------------------------------------------------
# ccmalloc
# ---------------------------------------------------------------------------

AC_ARG_ENABLE(ccmalloc, [], enable_ccmalloc=yes, enable_ccmalloc=no)
AM_CONDITIONAL(ENABLE_CCMALLOC, test x$enable_ccmalloc = xyes)


# ---------------------------------------------------------------------------
# profiling
# ---------------------------------------------------------------------------

AC_ARG_ENABLE(prof, [], enable_prof=yes, enable_prof=no)
AM_CONDITIONAL(ENABLE_PROF, test x$enable_prof = xyes)


# ---------------------------------------------------------------------------
# Checks for typedefs, structures, and compiler characteristics.
# ---------------------------------------------------------------------------
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_HEADER_TIME

# ---------------------------------------------------------------------------
# Checks for library functions.
# ---------------------------------------------------------------------------
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(select)
AC_CHECK_FUNC(getopt_long,, [getopt=yes])
AM_CONDITIONAL(NO_GETOPT_LONG, test x$getopt = xyes)

AC_CHECK_LIB(xpg4, setlocale)

# ---------------------------------------------------------------------------
# Changing Gettext behaviour. These fixes are taken from Freeciv.
# ---------------------------------------------------------------------------
dnl Vast quantities of meaningless errors from xgettext is also annoying.
dnl We fix this by filtering its output, removing "unknown extension"
dnl warnings.
AC_OUTPUT_COMMANDS(
  [if test -f po/Makefile ; then
     if grep 'grep -v "is unknown; will try C"' po/Makefile >/dev/null 2>&1 ; then
       # has already been silenced
       :
     else
       echo silencing po/Makefile
       mv -f po/Makefile po/Makefile.tmp
       sed -e 's/--files-from=$(srcdir)\/POTFILES.in/--files-from=$(srcdir)\/POTFILES.in 2>\&1 | grep -v "is unknown; will try C"/' po/Makefile.tmp > po/Makefile
       rm po/Makefile.tmp
     fi
   fi])

dnl Finally, the default behavior of msgmerge breaks 2-byte character
dnl encodings, as used in ja.po and others.
dnl We fix this by forcing the "-w 0" option on all msgmerge calls.
AC_OUTPUT_COMMANDS(
  [if test -f po/Makefile ; then
     if grep 'MSGMERGE = PATH=../src:$$PATH msgmerge -w 0' po/Makefile >/dev/null 2>&1 ; then
       # has already been modified
       :
     else
       echo modifying po/Makefile
       mv -f po/Makefile po/Makefile.tmp
       sed -e 's/MSGMERGE = PATH=..\/src:$$PATH msgmerge/MSGMERGE = PATH=..\/src:$$PATH msgmerge -w 0/' po/Makefile.tmp > po/Makefile
       rm po/Makefile.tmp
     fi
   fi])


# ---------------------------------------------------------------------------
# Finished !
# ---------------------------------------------------------------------------
AC_OUTPUT([
   intl/Makefile
   Arenas/Makefile
   Documentation/Makefile
   Robots/Makefile
   Robots/seek_and_destroy/Makefile
   Robots/rotate_and_fire/Makefile
   Robots/empty/Makefile
   src/Makefile
   src/RobotClient/Makefile
   src/Core/Makefile
   src/Common/Makefile
   src/Network/Makefile
   src/Gadgets/Makefile
   src/Gui/Makefile
   src/Gui/Gtk/Makefile
   src/Gui/none/Makefile
   po/Makefile.in
   Packages/Makefile
   Packages/rpm/Makefile
   Packages/rpm/RealTimeBattle.spec
   Packages/debian/Makefile
   Packages/freebsd/Makefile
   Makefile])


